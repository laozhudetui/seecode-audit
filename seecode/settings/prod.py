"""
Django settings for soc_web project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import yaml

web_conf_path = '/etc/seecode.yml'

if not os.path.isfile(web_conf_path):
    raise Exception('The {0} not found!'.format(web_conf_path))

with open(web_conf_path, 'rb') as fp:
    web_config = yaml.load(fp, Loader=yaml.FullLoader)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '\x97{\xfd\xcc\n1\xc15\x15,jO\xaf7xf8\x93\xb3\xebi)\xfdk\x8a\x05\xdd\x85%\xc4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']

# Application definition

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cas.middleware.CASMiddleware',

]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'cas',
    'rest_framework',
    'rest_framework_swagger',
    'rest_framework.authtoken',

    'corsheaders',
    'django_celery_beat',

    'seecode.apps.api.v2',
    'seecode.apps.project',
    'seecode.apps.node',
    'seecode.apps.authenticate',
    'seecode.apps.system',
    'seecode.apps.tactic',
    'seecode.apps.scan',
]

DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],

        'APP_DIRS': True,
        'OPTIONS': {
            "debug": DEBUG,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'seecode.apps.system.views.base.permission_settings',
            ],
        },
    },
]

MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(BASE_DIR, 'static'),
)

ROOT_URLCONF = 'seecode.urls'
WSGI_APPLICATION = 'seecode.wsgi.application'
LOGIN_URL = '/login'
PROXY_DOMAIN = 'http://seecode-audit.com'
CAS_SERVER_URL = "http://sso.example.com/"

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'cas.backends.CASBackend',
)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': web_config['mysql']['default']['database'],  # Or path to database file if using sqlite3.
        'HOST': web_config['mysql']['default']['host'],  # Set to empty string for localhost. Not used with sqlite3.
        'USER': web_config['mysql']['default']['username'],  # Not used with sqlite3.
        'PASSWORD': web_config['mysql']['default']['password'],
        'PORT': web_config['mysql']['default']['port'],  # Set to empty string for default. Not used with sqlite3.
        'OPTIONS': {'charset': 'utf8mb4'}
    },
    'slave': {
        'ENGINE': 'django.db.backends.mysql',  # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': web_config['mysql']['slave']['database'],  # Or path to database file if using sqlite3.
        'USER': web_config['mysql']['slave']['username'],  # Not used with sqlite3.
        'PASSWORD': web_config['mysql']['slave']['password'],
        'HOST': web_config['mysql']['slave']['host'],
        'PORT': web_config['mysql']['slave']['port'],  # Set to empty string for default. Not used with sqlite3.
        'OPTIONS': {'charset': 'utf8mb4'}
    }

}

# 配置读写分离
DATABASE_ROUTERS = ['seecode.libs.utils.db_router.MasterSlaveDBRouter']

# Redis
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "KEY_PREFIX": "seecode_db_ce",
#         "LOCATION": "redis://{0}:{1}/{2}".format(
#             web_config['redis']['host'],
#             web_config['redis']['port'],
#             web_config['redis']['db'],
#         )
# ,
#         "OPTIONS": {
#             "COMPRESSOR": "django_redis.compressors.zlib.ZlibCompressor",
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             "PASSWORD": web_config['redis']['password'],
#             "SOCKET_CONNECT_TIMEOUT": 5,  # in seconds
#             "SOCKET_TIMEOUT": 5,  # in seconds
#             "PICKLE_VERSION": -1  # Use the latest protocol version
#         }
#     }
# }

# Memcached  https://github.com/django-pylibmc/django-pylibmc
CACHES = {
    'default': {
        'BACKEND': 'django_pylibmc.memcached.PyLibMCCache',
        'KEY_PREFIX': 'seecode_db_ce',
        'LOCATION': web_config['memcached']['host'],
        # 'LOCATION': 'unix:/tmp/memcached.sock',
        'OPTIONS': {
            'binary': True,
            'server_max_value_length': 1024 * 1024 * 2,
            'username': web_config['memcached']['host'],
            'password': web_config['memcached']['password'],
            'behaviors': {
                'ketama': True,
            }
        }
    }
}

DJANGO_REDIS_IGNORE_EXCEPTIONS = True
CACHE_PAGE_TIMEOUT = 60 * 1

CORS_ORIGIN_WHITELIST = (
    'http://localhost',
    'http://127.0.0.1',
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
UPLOAD_URL = '/media/upload/'
UPLOAD_ROOT = os.path.join(MEDIA_ROOT, 'upload')
UPGRADE_ROOT = os.path.join(MEDIA_ROOT, 'upgrade')

# Alarm
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = False
EMAIL_HOST = 'mail.protonmail.com'
EMAIL_HOST_USER = 'alarm@protonmail.com'
EMAIL_HOST_PASSWORD = ''
EMAIL_PORT = 25

# CELERY
CELERY_BROKER_URL = web_config['celery']['celery_broker_url'] or web_config['env']['SEECODE_CELERY_BROKER_URL']

if web_config['env']:
    os.environ['SEECODE_CELERY_BROKER_URL'] = web_config['env']['SEECODE_CELERY_BROKER_URL']
    os.environ['SEECODE_C_FORCE_ROOT'] = str(web_config['env']['SEECODE_C_FORCE_ROOT'])
